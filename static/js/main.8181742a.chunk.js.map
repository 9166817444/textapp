{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlfor","TextForm","useState","text","setText","style","Color","heading","value","onChange","event","target","backgroundColor","color","rows","newText","toUpperCase","toLowerCase","split","join","length","About","myStyle","setMyStyle","btntext","setBtnText","border","App","setMode","setAlert","showAlert","message","msg","document","body","backgroundcolor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8181742a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n       \r\n             <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">About</a>\r\n        </li>\r\n        <li className=\"nav-item\"/>\r\n      \r\n        <li className=\"nav-item\">\r\n          {/*<Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>*/}\r\n        </li> \r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode===`light`?`dark`:`light`}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string,\r\n                    AboutText: PropTypes.string\r\n}","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick =()=>{\r\n       // console.log(\"Upper case was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLoClick =()=>{\r\n       // console.log(\"Upper case was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    //const handleCopy = () =>{\r\n      \r\n        //var text = document.getElementById(\"Text\");\r\n        //text.Select();\r\n        //navigator.clipboard.writeText(text.value);\r\n    //}\r\n    const handleClearClick =()=>{\r\n        // console.log(\"Upper case was clicked\" + text);\r\n         let newText = '';\r\n         setText(newText)\r\n     }\r\n     const handleRemoveSpace = () =>{\r\n         let newText = text.split(/[ ]+/);\r\n         setText(newText.join(\"\"))\r\n     }\r\n    const handleOnChange =(event)=>{\r\n        \r\n        setText(event.target.value)\r\n    }\r\n    \r\n    const [text, setText] = useState('Enter text here');\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className='container'style={{Color: props.mode===`Dark`?`white`:`Black`}}>\r\n    <h1 >{props.heading} </h1>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode===`Dark`?`grey`:`white`, color: props.mode==='dark'?'white':'black'}} id=\"Text\" rows=\"6\"></textarea>\r\n    </div>\r\n      \r\n<button className=\"btn btn primary mx-2\" onClick={handleUpClick}>Conver to Uppercase</button>\r\n\r\n<button className=\"btn btn primary mx-2\" onClick={handleLoClick}>Conver to Lowercase</button>\r\n<button className=\"btn btn primary mx-2\" onClick={handleClearClick}>Clear text</button>\r\n{/*<button className=\"btn btn primary mx-2\" onClick={handleCopy}>CopyText</button>}*/}\r\n<button className=\"btn btn primary mx-2\" onClick={handleRemoveSpace}>Remove Space</button>\r\n\r\n        </div>\r\n        <div className=\"container my-6\" style={{Color: props.mode===`Dark`?`white`:`Black`}}>\r\n            <h1>your text summary</h1>\r\n            <p> {text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n  const [myStyle, setMyStyle] = useState(\r\n  {\r\n    color:'white',\r\n    backgroundColor:'black',\r\n    \r\n  })\r\n  const [btntext, setBtnText] = useState(\"Enable Light Mode\")\r\n  const toggleStyle = ()=>{\r\n          if(myStyle.color === 'white'){\r\n          setMyStyle({\r\n\r\n         color:'black',\r\n         backgroundColor:'white',\r\n         border:'1px solid Dark'\r\n\r\n      })\r\n\r\nsetBtnText(\"Enable Dark Mode\")\r\n    }\r\n    else{\r\n      setMyStyle({\r\n\r\n        color:'white',\r\n    backgroundColor:'black',\r\n    border:'1px solid white'\r\n\r\n      })\r\n      setBtnText(\"Enable Light Mode\");\r\n\r\n    }\r\n  }\r\n    return (\r\n        <div className=\"Container\" style={myStyle}>\r\n            <h1 className=\"my-3\">About </h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle} >\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" style={myStyle} aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNames that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\"  style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div className=\"container my-3\" >\r\n  <button  onClick={toggleStyle}type=\"button\" className=\"btn btn-primary\">{btntext} </button> \r\n</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport './App.css';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react';\r\nimport About from './components/About'\r\n//import Alert from './components/Alert';\r\nimport {\r\n  //BrowserRouter as Router,\r\n // Switch,\r\n // Route,\r\n  \r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction App() {\r\nconst [mode, setMode ] = useState('light');\r\nconst [, setAlert] = useState();\r\n\r\n\r\nconst showAlert = (message, type)=>{\r\n\r\n  setAlert({\r\n    msg: message,\r\n    type: type\r\n  })\r\n\r\n}\r\n const toogleMode = () =>{\r\n   if(mode === 'light'){\r\n     setMode ('dark');\r\n     document.body.style.backgroundcolor = 'grey';\r\n     showAlert(\"Dark mode has been enabled\",\"sucess\"); \r\n    }\r\n    else{\r\n      setMode ('light');\r\n      document.body.style.backgroundcolor = 'light ';\r\n      showAlert(\"Light mode has been enabled\",\"sucess\");\r\n    }\r\n   \r\n\r\n}\r\n  return (\r\n  <>\r\n{/*<Router>*/}\r\n<Navbar title=\"RCDiamonds\" mode={mode} toggleMode={toogleMode} />\r\n\r\n<About/>\r\n<div className=\"container\">\r\n{/*<Switch>*/}\r\n          {/*<Route exact path=\"/about\">*/}\r\n            <About />\r\n          {/*</Route>*/}\r\n          \r\n          {/*<Route exact path=\"/\">*/}\r\n          < TextForm heading=\"Enter the text to analyze\" mode={mode}/>\r\n          {/*</Route>*/}\r\n        {/*</Switch>*/}\r\n   \r\n</div>\r\n{/*</Router>*/}\r\n\r\n  </>\r\n  ); \r\n  }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}